#include<iostream>
using namespace std;
#include<string>




//// 构造函数调用规则
// 
// 默认情况下，C++编译器至少给一个类添加4个函数
// 1.默认构造函数（无参、函数体为空）
// 2.默认析构函数（无参、函数体为空）
// 3.默认拷贝构造函数，对属性进行拷贝（默认浅拷贝）
// 4.赋值运算符operator=，对属性进行值拷贝
//
//
// 构造函数调用规则如下：
// 1.如果用户定义有参构造函数，C++不再提供无参构造，但是会提供默认拷贝构造
// 2.如果用户定义拷贝构造函数，C++不会再提供其他普通构造函数
// 
// 总的来说：按照优先级【无参构造 < 有参构造 < 拷贝构造】的顺序。
//			 若手动定义了构造函数，编译器仍会自动提供优先级更高的，但不会提供优先级更低的（编译器无法提供有参构造）




//class A
//{
//public:
//	int num;
//
//	A(int a) {// 有参构造
//		num = a;
//	}
//};
//
//class B
//{
//public:
//	int num;
//
//	B(const B& b) {// 拷贝构造
//		num = b.num;
//	}
//
//};
//
//int main()
//{
//	//A a1;// 报错	（1.定义了有参构造，C++就不会自动提供无参构造）
//	A a2(233);
//	A a3(a2);//		（2.定义有参构造，C++会自动提供拷贝构造）
//	cout << a3.num << endl;// 233
//
//
//	//B b1;// 报错	（3.定义了拷贝构造，C++就不会自动提供无参(普通)构造）
//
//	return 0;
//}
