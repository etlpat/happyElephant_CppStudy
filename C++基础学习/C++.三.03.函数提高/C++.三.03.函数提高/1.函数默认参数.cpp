#include<iostream>
using namespace std;




//// 函数默认参数
// 在C++中，函数的形参可以有默认值
// 默认值：实参从左到右向形参传递。对应位置如果传了实参，就按实参的数据；没有传参，就按默认值数据
// 语法：返回类型 函数名(数据类型 参数 = 默认值){...};
//
//
// 注意：
// 1.带默认值的参数，必须都放在形参数列表的右侧(结尾)
// 2.如果函数的实现中写了默认参数，那么函数的声明中就不能写默认参数；
//   相反，如果声明中写了默认参数，那么函数实现中就不写有默认参数。（避免二义性：假如实现和声明都有默认参数，且默认参数不同，就造成了二义性）




//int func1(int a = 10, int b = 10, int c = 10)
//{
//	return a + b + c;
//}
//
//int func2(int a, int b, int c = 10)// 带有默认值的参数必须放在参数列表右侧
//{
//	return a + b + c;
//}
//
//int func3(int a, int b, int c);// 函数的声明和定义，只能有一方带有默认值
//int func3(int a = 10, int b = 10, int c = 10)
//{
//	return a + b + c;
//}
//
//int main()
//{
//	cout << func1(0, 5) << endl;// 15，传了实参就优先按实参的数据计算，没传的参数就按默认值计算
//	cout << func1(2, 2) << endl;// 14
//	cout << func3() << endl;// 30
//
//	return 0;
//}
